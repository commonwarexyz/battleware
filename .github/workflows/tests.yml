name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  UDEPS_VERSION: 0.1.57
  NIGHTLY_VERSION: nightly-2025-08-10
  NODE_VERSION: 20

jobs:
  All:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Get Rust version
      id: rust-version
      run: echo "rust_version=$(rustc --version)" >> "$GITHUB_OUTPUT"
    - name: Run setup
      uses: ./.github/actions/setup
    - name: Lint
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Fmt
      run: cargo fmt --all -- --check
    - name: Check docs
      run: cargo doc --no-deps --document-private-items
      env:
        RUSTDOCFLAGS: "-D warnings"
    - name: Run tests
      run: cargo test --verbose

  Dependencies:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install nightly Rust toolchain
      run: rustup toolchain install ${{ env.NIGHTLY_VERSION }}
    - name: Get Rust version
      id: rust-version
      run: echo "rust_version=$(rustc +${{ env.NIGHTLY_VERSION }} --version)" >> "$GITHUB_OUTPUT"
    - name: Run setup
      uses: ./.github/actions/setup
    - name: Cache cargo-udeps
      id: cargo-udeps-cache
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin/cargo-udeps
        key: ${{ runner.os }}-${{ env.UDEPS_VERSION }}-cargo-udeps-${{ steps.rust-version.outputs.rust_version }}
    - name: Install cargo-udeps
      if: steps.cargo-udeps-cache.outputs.cache-hit != 'true'
      run: cargo +${{ env.NIGHTLY_VERSION }} install cargo-udeps --version ${{ env.UDEPS_VERSION }}
    - name: Check for unused dependencies
      run: cargo +${{ env.NIGHTLY_VERSION }} udeps --all-targets

  React:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Get Rust version
      id: rust-version
      run: echo "rust_version=$(rustc --version)" >> "$GITHUB_OUTPUT"
    - name: Run setup
      uses: ./.github/actions/setup
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: website/package-lock.json
    - name: Install dependencies
      run: cd website && npm ci
    - name: Test compilation
      run: cd website && npm run build
    - name: Test website
      run: cd website && npm run test

  Lock:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run setup
      uses: ./.github/actions/setup
    - name: Build entire workspace
      run: cargo build --workspace --all-targets
    - name: Check Cargo.lock unchanged
      run: |
        if ! git diff --exit-code Cargo.lock; then
          echo "ERROR: Cargo.lock was modified during build!"
          echo "This suggests that the Cargo.lock file in the repository is not up to date."
          echo "Please run 'cargo build' locally and commit the updated Cargo.lock."
          exit 1
        fi
        echo "âœ“ Cargo.lock remained unchanged after building everything"